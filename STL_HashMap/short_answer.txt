Assignment 3: STL HashMap (short answer questions)
Names: Staecy Lee

Milestone 1
1. at() vs. []
[] will not throw exception if a key is not found, instead it will create a K/M pair with that key and default value. 

2. HashMap::find vs. std::find
The std::find uses loop to loop throuugh everything, while the HashMap uses hash funciton to identify the bucket first. So it is preferrable to call the HashMap::find. 

3. Why is the HashMap class RAII-compliant?
RAII-compliant means all resources should be acquired in the constructor and freed in the destructor.
The HashMap class follows this rule.

4. Briefly explain the implementation of operator++. 
The iterator class keeps track of the node the iterator is currentlly pointing to as a private variable. The next node is returned. If the next node is null, find node in then next bucket.

Milestone 2
1. Why is it that we need to implement the special member functions in the HashMap class, but we can default all the special member functions in the HashMapIterator class?
First, according to the Rule of Five, if we have define our own destructor, we have to implement all the rest too: copy constructor, copy assignment, move constructor, and move assignment.
Other than that, std::vector's copy constructor and assignment operators perform deep copy, where we need to handle them more carefully. 

2. In your move constructor or move assignment operator, why did you have to std::move each member, even though the parameter (named rhs) is already an r-value reference?
It is safer? Ensure that all the elements are moved properly?